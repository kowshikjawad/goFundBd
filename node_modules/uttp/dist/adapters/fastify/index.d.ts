/// <reference types="node" />
import { FastifyPluginCallback } from 'fastify';
import { Handler, inferHandlerOptions } from '../../types.js';
export interface FastifyAdapterOptions<TOptions extends any[]> {
    setPrefix?(...options: TOptions): string;
}
export declare const getFastifyAdapter: <THandler extends Handler>(handler: THandler, fastifyAdapterOptions?: FastifyAdapterOptions<import("../../types.js").DropFirst<Parameters<THandler>>>) => (...options: import("../../types.js").DropFirst<Parameters<THandler>>) => Promise<FastifyPluginCallback<Record<never, never>, import("http").Server, import("fastify").FastifyTypeProviderDefault>>;
