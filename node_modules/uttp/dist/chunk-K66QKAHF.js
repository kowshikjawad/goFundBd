// src/util.ts
var RequestEntityTooLarge = new Error("request entity too large");
var getStringFromIncomingMessage = async (body, { maxBodySize }) => {
  return new Promise((resolve) => {
    let readBody = "";
    let hasBody = false;
    body.on("data", function(data) {
      readBody += data;
      hasBody = true;
      if (typeof maxBodySize === "number" && readBody.length > maxBodySize) {
        body.socket.destroy();
        throw RequestEntityTooLarge;
      }
    });
    body.on("end", () => {
      if (hasBody) {
        return resolve(readBody);
      }
      resolve(void 0);
    });
  });
};
var getUrlWithBase = (url) => {
  const stringUrlWithBase = url.startsWith("/") ? `http://127.0.0.1${url}` : url;
  return new URL(stringUrlWithBase);
};

export {
  getStringFromIncomingMessage,
  getUrlWithBase
};
