import {
  getStringFromIncomingMessage,
  getUrlWithBase
} from "./chunk-K66QKAHF.js";

// src/adapters/node/index.ts
var getNodeAdapter = (handler) => {
  return async (...options) => {
    const handlerBag = await handler({
      parseBodyAsString(rawRequest) {
        const request = rawRequest;
        return getStringFromIncomingMessage(request, { maxBodySize: handlerBag.adapterOptions.maxBodySize });
      }
    }, ...options);
    const requestListener = async (request, nodeResponse) => {
      const url = getUrlWithBase(request.url);
      const response = await handlerBag.handleRequest({
        rawRequest: request,
        body: void 0,
        headers: request.headers,
        method: request.method,
        url
      });
      nodeResponse.statusCode = response.status;
      if (response.headers) {
        for (const [key, value] of Object.entries(response.headers)) {
          if (typeof value === "undefined")
            continue;
          nodeResponse.setHeader(key, value);
        }
      }
      nodeResponse.end(response.body);
    };
    return requestListener;
  };
};

export {
  getNodeAdapter
};
